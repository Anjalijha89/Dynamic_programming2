M-1 Catelan's number using recursion
    /*public static int catelan(int n)
    {
        if(n==0 || n==1)
        {
            return 1;
        }
        int ans=0;
        for(int i=0;i<=n-1;i++)
        {
            ans += catelan(i) * catelan(n-i-1);
        }
        return ans;
    }
    public static void main(String args[])
    {
        int n =5;
        System.out.println(catelan(n));
    }

     */


    .M-2 Catelan's number using memoization
   /* public static int catelan(int n,int dp[])
    {
        if(n==0 || n==1)
        {
            return 1;
        }
        if(dp[n] != -1)
        {
            return dp[n];
        }
        int ans =0;
        for(int i=0;i<n;i++)
        {
            ans += catelan(i,dp) * catelan(n-i-1,dp);
        }
        return dp[n] = ans;
    }
    public static void main(String args[])
    {
        int n =5;
        int dp[] = new int[n+1];
        Arrays.fill(dp,-1);
        System.out.println(catelan(n,dp));
    }

    */



    .M-3 Catelan's number using tabulation
    public static int catelan(int n)
    {
        int dp[] = new int[n+1];
        dp[0] =1;
        dp[1] = 1;
        for(int i=2;i<=n;i++)
        {
            for(int j=0;j<i;j++)
            {
                dp[i] += dp[j] * dp[i-j-1];
            }
        }
        return dp[n];
    }
    public static void main(String args[])
    {
        System.out.println(catelan(5));
    }

